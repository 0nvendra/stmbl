#include "../hal.h"
COMP(auto);

HAL_PIN(pwm_in) = 0.0;
HAL_PIN(pwm_out) = 0.0;
HAL_PIN(mag_pos_out) = 0.0;

HAL_PIN(start) = 0.0;
HAL_PIN(ready) = 0.0;

HAL_PIN(offset) = 0.0;

HAL_PIN(fb_in) = 0.0;
HAL_PIN(fb_d_in) = 0.0;

HAL_PIN(pole_count) = 0.0;

HAL_PIN(freq) = 77.0;
HAL_PIN(time) = 0.1;
HAL_PIN(scale) = 0.9;
HAL_PIN(state) = 0.0;

MEM(float mpos) = 0.0;
MEM(float mpos_avg) = 0.0;
MEM(float fb_d_avg) = 0.0;
MEM(float startpos) = 0.0;
MEM(float cov) = 0.0;
MEM(float covs) = 0.0;
MEM(float covc) = 0.0;
MEM(float pwm) = 0.0;
MEM(float offset_) = 0.0;


RT_CALC(
  float fb = PIN(fb_in);
  float fb_d = PIN(fb_d_in);

  HT(
    GOTO(0);
    STATE(0){
      mpos = mod(DEG(180.0) + mpos);
      SLEEP((0.5 / PIN(freq)));
    }
  );

  HT(
    GOTO(0);
    STATE(0){
      mpos_avg = mpos_avg * 0.9 + mpos * 0.1;
      fb_d_avg = fb_d_avg * 0.9 + fb_d * 0.1;

      cov += (mpos - mpos_avg) * (fb_d - fb_d_avg);
    }
  );

  HT(
    GOTO(0);
    STATE(0){
      PIN(state) = 0.0;
      pwm = PIN(pwm_in);
      mpos = mod((fb + offset_) * PIN(pole_count) + DEG(90));
      PIN(ready) = 1.0;
      if(PIN(start) > 0.0){
        PIN(state) = 0.5;
        startpos = fb;
        mpos = 0.0;
        mpos_avg = 0.0;
        fb_d_avg = 0.0;
        pwm = PIN(scale);
        PIN(ready) = 0.0;
        GOTO(1);
      }
    }
    STATE(1){
      PIN(state) = 1.0;
      SLEEP(PIN(time));
      PIN(state) = 1.1;
      covs = cov;
      pwm = 0.0;
      SLEEP(PIN(time));
      PIN(state) = 1.2;
      cov = 0.0;
      mpos = DEG(90.0);
      mpos_avg = 0.0;
      fb_d_avg = 0.0;
      pwm = PIN(scale);
      SLEEP(PIN(time));
      PIN(state) = 1.3;
      covc = cov;
      pwm = 0.0;
      offset_ = minus(mod(startpos * PIN(pole_count)), atan2f(covs, covc)); // TODO polecount ...
      PIN(ready) = 1.0;
      GOTO(2);
    }
    STATE(2){
      PIN(state) = 2.0;
      pwm = PIN(pwm_in);
      mpos = mod((fb + offset_) * PIN(pole_count) + DEG(90));
      if(PIN(start) == 0.0){
        GOTO(0);
      }
    }
  );

  PIN(offset) = offset_;
  PIN(pwm_out) = pwm;
  PIN(mag_pos_out) = mpos;
);


ENDCOMP;
