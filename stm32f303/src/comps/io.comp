HAL_COMP(io);

HAL_PIN(led) = 0.0;

HAL_PIN(iu) = 0.0;
HAL_PIN(iv) = 0.0;
HAL_PIN(iw) = 0.0;

HAL_PIN(u) = 0.0;
HAL_PIN(v) = 0.0;
HAL_PIN(w) = 0.0;
HAL_PIN(udc) = 0.0;

HAL_PIN(hv_temp) = 0.0;
HAL_PIN(mot_temp) = 0.0;

MEM(float u_offset) = 0;
MEM(float v_offset) = 0;
MEM(float w_offset) = 0;
MEM(uint32_t adc_12_buf[10]);
MEM(uint32_t adc_34_buf[10]);

#define ADC(a) ((a) / ARES * AREF)

#define HV_TEMP_PULLUP 10000
#define HV_R(a) (HV_TEMP_PULLUP / (AREF / (a) - 1)) 

#define MOT_TEMP_PULLUP 10000
#define MOT_TEMP_PULLMID 51000
#define MOT_TEMP_PULLDOWN 10000
#define MOT_TEMP_REF 15.26
#define MOT_REF(a) ((a) * (MOT_TEMP_PULLMID + MOT_TEMP_PULLDOWN) / MOT_TEMP_PULLDOWN)
#define MOT_R(a) (MOT_TEMP_PULLUP / (MOT_TEMP_REF / (a) - 1))

float r2temp(float r){
   r = r / 1000;
   const int step = 10;
   const int start = -10;
   //-10..100
   const float temp[] = {271.7, 158.2, 95.23, 59.07, 37.64, 24.59, 16.43, 11.21, 7.798, 5.518, 3.972, 2.902};

   for(int i = 1; i < ARRAY_SIZE(temp); i++){
      if(temp[i] < r){
         float a = temp[i - 1];
         float b = temp[i];
         return(-(r - b) / (a - b) * step + i * step + start);
      }
   }
   return(temp[ARRAY_SIZE(temp)] + step);
}

INIT(
   DMA1_Channel1->CCR &= (uint16_t)(~DMA_CCR_EN);
   DMA1_Channel1->CPAR = (uint32_t)&(ADC12_COMMON->CDR);
   DMA1_Channel1->CMAR = (uint32_t)adc_12_buf;
   DMA1_Channel1->CNDTR = 6;
   DMA1_Channel1->CCR = DMA_CCR_MINC | DMA_CCR_PL_0 | DMA_CCR_MSIZE_1 | DMA_CCR_PSIZE_1 | DMA_CCR_CIRC;
   ADC1->CFGR |= ADC_CFGR_DMAEN | ADC_CFGR_DMACFG;
   DMA1_Channel1->CCR |= DMA_CCR_EN;

//   ADC12_COMMON->CCR |= ADC12_CCR_MDMA_1;

   DMA2_Channel5->CCR &= (uint16_t)(~DMA_CCR_EN);
   DMA2_Channel5->CPAR = (uint32_t)&(ADC34_COMMON->CDR);
   DMA2_Channel5->CMAR = (uint32_t)adc_34_buf;
   DMA2_Channel5->CNDTR = 6;
   DMA2_Channel5->CCR = DMA_CCR_MINC | DMA_CCR_PL_0 | DMA_CCR_MSIZE_1 | DMA_CCR_PSIZE_1 | DMA_CCR_CIRC;
   ADC3->CFGR |= ADC_CFGR_DMAEN | ADC_CFGR_DMACFG;
   DMA2_Channel5->CCR |= DMA_CCR_EN;

//   ADC34_COMMON->CCR |= ADC34_CCR_MDMA_1;
);

NRT(
   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, PIN(led) > 0 ? GPIO_PIN_SET : GPIO_PIN_RESET);
);

RT(
  while(!(DMA1->ISR & DMA_ISR_TCIF1)){}
  while(!(DMA2->ISR & DMA_ISR_TCIF5)){}
  
  DMA1->IFCR = DMA_IFCR_CTCIF1;
  DMA2->IFCR = DMA_IFCR_CTCIF5;

  uint32_t a12 = adc_12_buf[0] + adc_12_buf[1] + adc_12_buf[2] + adc_12_buf[3] + adc_12_buf[4];
  uint32_t a34 = adc_34_buf[0] + adc_34_buf[1] + adc_34_buf[2] + adc_34_buf[3] + adc_34_buf[4];
  
  if(u_offset == 0){
     w_offset = AMP((a12 & 0xFFFF) / 5.0, SHUNT_GAIN);
     u_offset = AMP((a12 >> 16) / 5.0, SHUNT_GAIN);
     v_offset = AMP((a34 & 0xFFFF) / 5.0, SHUNT_GAIN);
  }
  
  PIN(iw) = -AMP((a12 & 0xFFFF) / 5.0, SHUNT_GAIN) + w_offset;
  PIN(iu) = -AMP((a12 >> 16) / 5.0, SHUNT_GAIN) + u_offset;
  PIN(iv) = -AMP((a34 & 0xFFFF) / 5.0, SHUNT_GAIN) + v_offset;
  PIN(w) = VOLT(adc_12_buf[5] & 0xFFFF) * 0.05 + PIN(w) * 0.95;
  PIN(v) = VOLT(adc_12_buf[5] >> 16) * 0.05 + PIN(v) * 0.95;
  PIN(u) = VOLT(adc_34_buf[5] & 0xFFFF) * 0.05 + PIN(u) * 0.95;
  PIN(udc) = VOLT(adc_34_buf[5] >> 16) * 0.05 + PIN(udc) * 0.95;
  
  PIN(hv_temp) = r2temp(HV_R(ADC(adc_34_buf[0] >> 16))) * 0.01 + PIN(hv_temp) * 0.99;
  PIN(mot_temp) = MOT_R(MOT_REF(ADC(adc_34_buf[5] >> 16)));
);

ENDCOMP;
